apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-contato
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-contato
  template:
    metadata:
      labels:
        app: db-contato
    spec:
      containers:
      - name: db-contato
        image: postgres:latest
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DB_PASS
        - name: POSTGRES_DB
          value: "db_contato"
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: db-contato
  namespace: registro-contato
spec:
  selector:
    app: db-contato
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: RABBITMQ_USER
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: RABBITMQ_PASS
        ports:
        - containerPort: 5672
        - containerPort: 15672
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: registro-contato
spec:
  selector:
    app: rabbitmq
  ports:
    - name: amqp
      protocol: TCP
      port: 5672
      targetPort: 5672
    - name: management
      protocol: TCP
      port: 15672
      targetPort: 15672
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: registro-contato
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: GF_SECURITY_ADMIN_USER
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: GF_SECURITY_ADMIN_PASSWORD
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: registro-contato
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-exporter
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-exporter
  template:
    metadata:
      labels:
        app: postgres-exporter
    spec:
      containers:
      - name: postgres-exporter
        image: prometheuscommunity/postgres-exporter
        env:
        - name: DATA_SOURCE_NAME
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DATA_SOURCE_NAME
        ports:
        - containerPort: 9187
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-exporter
  namespace: registro-contato
spec:
  selector:
    app: postgres-exporter
  ports:
    - protocol: TCP
      port: 9187
      targetPort: 9187
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: add-contato-consumer
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: add-contato-consumer
  template:
    metadata:
      labels:
        app: add-contato-consumer
    spec:
      containers:
      - name: add-contato-consumer
        image: barbarasousilva/registrocontato-add-contato-consumer:latest
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: update-contato-consumer
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: update-contato-consumer
  template:
    metadata:
      labels:
        app: update-contato-consumer
    spec:
      containers:
      - name: update-contato-consumer
        image: barbarasousilva/registrocontato-update-contato-consumer:latest
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: delete-contato
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: delete-contato
  template:
    metadata:
      labels:
        app: delete-contato
    spec:
      containers:
      - name: delete-contato
        image: barbarasousilva/registrocontato-delete-contato:latest
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: delete-contato
  namespace: registro-contato
spec:
  selector:
    app: delete-contato
  ports:
    - protocol: TCP
      port: 5001
      targetPort: 8080
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: get-contato
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: get-contato
  template:
    metadata:
      labels:
        app: get-contato
    spec:
      containers:
      - name: get-contato
        image: barbarasousilva/registrocontato-get-contato:latest
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: get-contato
  namespace: registro-contato
spec:
  selector:
    app: get-contato
  ports:
    - protocol: TCP
      port: 5005
      targetPort: 8080
  type: NodePort 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: add-contato-producer
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: add-contato-producer
  template:
    metadata:
      labels:
        app: add-contato-producer
    spec:
      containers:
      - name: add-contato-producer
        image: barbarasousilva/registrocontato-add-contato-producer:latest
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: add-contato-producer
  namespace: registro-contato
spec:
  selector:
    app: add-contato-producer
  ports:
    - protocol: TCP
      port: 5006
      targetPort: 8080
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: update-contato-producer
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: update-contato-producer
  template:
    metadata:
      labels:
        app: update-contato-producer
    spec:
      containers:
      - name: update-contato-producer
        image: barbarasousilva/registrocontato-update-contato-producer:latest
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: update-contato-producer
  namespace: registro-contato
spec:
  selector:
    app: update-contato-producer
  ports:
    - protocol: TCP
      port: 5007
      targetPort: 8080
  type: NodePort

---
