apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus
        args:
          - "--config.file=/etc/prometheus/prometheus.yml"
          - "--storage.tsdb.path=/prometheus"
          - "--web.enable-lifecycle"
        ports:
          - containerPort: 9090
        volumeMounts:
          - name: prometheus-config
            mountPath: /etc/prometheus
          - name: prometheus-storage
            mountPath: /prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-storage
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: registro-contato
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
  type: NodePort
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: registro-contato
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: GF_SECURITY_ADMIN_USER
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: GF_SECURITY_ADMIN_PASSWORD
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: registro-contato
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: add-contato-consumer
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: add-contato-consumer
  template:
    metadata:
      labels:
        app: add-contato-consumer
    spec:
      containers:
      - name: add-contato-consumer
        image: barbarasousilva/registrocontato-add-contato-consumer:latest
        ports:
        - containerPort: 8080 
        envFrom:
        - configMapRef:
            name: app-configmap
        - secretRef:
            name: app-secrets
        startupProbe:
          exec:
            command:
              - sh
              - -c
              - nc -z rabbitmq 5672 || exit 1
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 10
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - pgrep dotnet || exit 1
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - pgrep dotnet || exit 1
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: update-contato-consumer
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: update-contato-consumer
  template:
    metadata:
      labels:
        app: update-contato-consumer
    spec:
      containers:
      - name: update-contato-consumer
        image: barbarasousilva/registrocontato-update-contato-consumer:latest
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: app-configmap
        - secretRef:
            name: app-secrets
        startupProbe:
          exec:
            command:
              - sh
              - -c
              - nc -z rabbitmq 5672 || exit 1
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 10
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - pgrep dotnet || exit 1
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - pgrep dotnet || exit 1
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: delete-contato
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: delete-contato
  template:
    metadata:
      labels:
        app: delete-contato
    spec:
      containers:
      - name: delete-contato
        image: barbarasousilva/registrocontato-delete-contato:latest
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: app-configmap
        - secretRef:
            name: app-secrets
        livenessProbe:
            httpGet:
                path: /contatos/up
                port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
        readinessProbe:
            httpGet:
                path: /contatos/up
                port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: delete-contato
  namespace: registro-contato
spec:
  selector:
    app: delete-contato
  ports:
    - protocol: TCP
      port: 5001
      targetPort: 8080
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: get-contato
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: get-contato
  template:
    metadata:
      labels:
        app: get-contato
    spec:
      containers:
      - name: get-contato
        image: barbarasousilva/registrocontato-get-contato:latest
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: app-configmap
        - secretRef:
            name: app-secrets
        livenessProbe:
            httpGet:
                path: /contatos/up
                port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
        readinessProbe:
            httpGet:
                path: /contatos/up
                port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: get-contato
  namespace: registro-contato
spec:
  selector:
    app: get-contato
  ports:
    - protocol: TCP
      port: 5005
      targetPort: 8080
  type: NodePort 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: add-contato-producer
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: add-contato-producer
  template:
    metadata:
      labels:
        app: add-contato-producer
    spec:
      containers:
      - name: add-contato-producer
        image: barbarasousilva/registrocontato-add-contato-producer:latest
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: app-configmap
        - secretRef:
            name: app-secrets
        livenessProbe:
            httpGet:
                path: /contatos/up
                port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
        readinessProbe:
            httpGet:
                path: /contatos/up
                port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
        startupProbe:
          exec:
            command:
              - sh
              - -c
              - nc -z rabbitmq 5672 || exit 1
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  name: add-contato-producer
  namespace: registro-contato
spec:
  selector:
    app: add-contato-producer
  ports:
    - protocol: TCP
      port: 5006
      targetPort: 8080
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: update-contato-producer
  namespace: registro-contato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: update-contato-producer
  template:
    metadata:
      labels:
        app: update-contato-producer
    spec:
      containers:
      - name: update-contato-producer
        image: barbarasousilva/registrocontato-update-contato-producer:latest
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: app-configmap
        - secretRef:
            name: app-secrets
        livenessProbe:
            httpGet:
                path: /contatos/up
                port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
        readinessProbe:
            httpGet:
                path: /contatos/up
                port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
        startupProbe:
          exec:
            command:
              - sh
              - -c
              - nc -z rabbitmq 5672 || exit 1
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  name: update-contato-producer
  namespace: registro-contato
spec:
  selector:
    app: update-contato-producer
  ports:
    - protocol: TCP
      port: 5007
      targetPort: 8080
  type: NodePort

---
